task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
    }
}

allprojects {
    ext.kotlinVersion = '0.11.91.4'
    ext.hasCredentials = project.hasProperty('bintrayUser') && project.hasProperty('bintrayKey')
    ext.publishToBintray = false

    buildscript {
        repositories {
            mavenLocal()
            jcenter()
            mavenCentral()
            maven {
                url 'https://dl.bintray.com/michaelrocks/lightsaber'
                if (hasCredentials) {
                    credentials {
                        username = bintrayUser
                        password = bintrayKey
                    }
                }
            }
        }
    }

    repositories {
        mavenCentral()
    }
}

allprojects {
    def properties = new Properties()
    properties.load(new FileInputStream(new File(rootDir, "version.properties")))
    def major = properties['version.major'] as int
    def minor = properties['version.minor'] as int
    def patch = properties['version.patch'] as int
    def snapshot = properties['version.snapshot'].toBoolean()
    version = "$major.$minor.$patch" + (snapshot ? '-SNAPSHOT' : '')
    group = 'io.michaelrocks'

    ext.dryRun = properties['version.dryRun'].toBoolean()
    ext.publish = properties['version.publish'].toBoolean()
}

subprojects {
    if (name == 'samples') {
        return
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven {
            url 'https://dl.bintray.com/michaelrocks/lightsaber'
            if (hasCredentials) {
                credentials {
                    username = bintrayUser
                    password = bintrayKey
                }
            }
        }
    }

    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    project.afterEvaluate {
        if (!publishToBintray) {
            project.tasks.remove(bintrayUpload)
            return
        }

        if (publishToBintray
                && !plugins.hasPlugin('com.android.application')
                && !plugins.hasPlugin('com.android.library')
                && plugins.hasPlugin('java')) {

            bintray {
                user = bintrayUser
                key = bintrayKey

                publications = ['mavenJava']

                dryRun = project.dryRun
                publish = project.publish
                pkg {
                    repo = 'lightsaber'
                    name = rootProject.name + '-' + project.name
                    websiteUrl = 'https://github.com/michaelrocks/lightsaber'
                    issueTrackerUrl = 'https://github.com/michaelrocks/lightsaber/issues'
                    vcsUrl = 'https://github.com/michaelrocks/lightsaber'
                    licenses = ['Apache-2.0']
                    labels = ['lightsaber']
                    publicDownloadNumbers = true

                    version {
                        released = new Date()
                        vcsTag = "v${project.version}"
                    }
                }
            }

            task sourcesJar(type: Jar, dependsOn: classes) {
                classifier = 'sources'
                from sourceSets.main.allSource
            }

            task javadocJar(type: Jar, dependsOn: javadoc) {
                classifier = 'javadoc'
                from javadoc.destinationDir
            }

            artifacts {
                archives sourcesJar, javadocJar
            }

            publishing {
                publications {
                    mavenJava(MavenPublication) {
                        artifactId project.bintray.pkg.name
                        if (plugins.hasPlugin('war')) {
                            from components.web
                        } else {
                            from components.java
                        }

                        artifact sourcesJar
                        artifact javadocJar
                    }
                }
            }
        }
    }
}

ext {
    shadowVersion = '1.2.1'

    javaxInjectVersion = '1'
    jcommanderVersion = '1.47'
    asmVersion = '5.0.3'
    commonsLangVersion = '3.3.2'
    commonsIoVersion = '2.4'
    commonsCollectionsVersion = '4.0'

    junitVersion = '4.12'

    androidToolsVersion = '1.2.3'
    supportVersion = '22.1.1'
}
